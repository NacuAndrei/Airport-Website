// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proiect.Entities;

namespace Proiect.Migrations
{
    [DbContext(typeof(ProiectContext))]
    [Migration("20220124093513_Route3")]
    partial class Route3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Proiect.Entities.Plane", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("Proiect.Entities.PlaneRoute", b =>
                {
                    b.Property<string>("PlaneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RouteId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PlaneId", "RouteId");

                    b.HasIndex("RouteId");

                    b.ToTable("PlaneRoutes");
                });

            modelBuilder.Entity("Proiect.Entities.Route", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Proiect.Entities.Ticket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DateOfPurchase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaneId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Proiect.Entities.PlaneRoute", b =>
                {
                    b.HasOne("Proiect.Entities.Plane", "Plane")
                        .WithMany("PlaneRoutes")
                        .HasForeignKey("PlaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proiect.Entities.Route", "Route")
                        .WithMany("PlaneRoutes")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plane");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("Proiect.Entities.Ticket", b =>
                {
                    b.HasOne("Proiect.Entities.Plane", "Plane")
                        .WithMany("Tickets")
                        .HasForeignKey("PlaneId");

                    b.Navigation("Plane");
                });

            modelBuilder.Entity("Proiect.Entities.Plane", b =>
                {
                    b.Navigation("PlaneRoutes");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Proiect.Entities.Route", b =>
                {
                    b.Navigation("PlaneRoutes");
                });
#pragma warning restore 612, 618
        }
    }
}
